---
# tasks file for git-download-suitecrm

- name: "Install Git and other needed packages"
  apt: name={{ item }} update_cache=yes 
  with_items: 
  - git
  - php7.0
  - php7.0-mbstring
  - php7.0-mysql
  - libapache2-mod-php7.0
  - php7.0-mcrypt
  - php7.0-curl
  - php7.0-json
  - php7.0-sqlite3
  - php7.0-zip
  - php7.0-xml
  - php-imap
  - php7.0-bcmath
  - php7.0-intl
  - php7.0-odbc
  - php7.0-soap
  notify: 
  - restart-apache

- name: 'Upgrade APT to the lastest packages'
  action: apt upgrade=safe

- name: "Clearing out existing web directory"
  file: 
    state: absent 
    path: /var/www/html/

- name: "Re-creating html directory"
  file:
    path: /var/www/html
    state: directory
    owner: www-data
    group: www-data
    mode: 0644
    recurse: yes

- name: "Git clone the repo"
  command: git clone {{ git_repo }} html
  args: 
    chdir: /var/www

- name: Debugging the git_branch variable
  debug: var=git_branch

- name: Debugging the tagged_release_version variable
  debug: var=tagged_release_version

- name: "Checkout the desired release"
  command: git checkout {{ tagged_release_version }}
  args: 
    chdir: /var/www/html
  when: tagged_release_version != ""

- name: "Checkout the desired branch"
  command: git checkout {{ git_branch }}
  args: 
    chdir: /var/www/html
  when: git_branch != ""

- name: "Setting ownership and permissions for web directory"
  file:
    path: /var/www/html
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
    recurse: yes
  notify: restart-apache

- name: "Setting ownership and permissions for web directory"
  file:
    path: /var/www/html/.git
    state: directory
    owner: root
    group: root
    mode: 0640
    recurse: yes

- name: "Setting ownership and permissions for web directory"
  file:
    path: /var/www/html/.gitignore
    state: file
    owner: root
    group: root
    mode: 0640

- name: "Install Composer program"
  script: ../files/install_composer.sh
  args: 
    creates: /usr/local/bin/composer

# - name: "Install Composer packages"
#   composer: 
#     command: install
#     working_dir: /var/www/html

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: MySQLi
    option: mysqli.allow_local_infile
    value: 0

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: PHP
    option: memory_limit
    value: 756M

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: PHP
    option: post_max_size
    value: 64M

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: PHP
    option: upload_max_filesize
    value: 64M

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: PHP
    option: max_input_time
    value: 60

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: PHP
    option: max_execution_time
    value: 300

- name: "Changing PHP ini file options"
  ini_file: 
    path: /etc/php/7.0/apache2/php.ini
    section: PHP
    option: date.timezone
    value: America/New_York

- name: "Copying repair.php (to repair permissions after deployments) to /usr/local/bin of server"
  copy:
    src: ../files/repair.php
    dest: /usr/local/bin/repair.php
    owner: root
    group: root
    mode: 0755

- name: "Install Python MySQL bindings required for Ansible MySQL module"
  apt: name=python-mysqldb state=installed

- name: MYSQL | Create {{db_name}} database
  mysql_db:
    name: "{{ db_name }}"
    login_password: "{{ mysql_root_password }}"
    state: present
    collation: "utf8_unicode_ci"

- name: MYSQL | Create {{db_name}} user
  mysql_user:
    login_password: "{{ mysql_root_password }}"
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    host: '%'
    priv: '{{ db_name }}.*:TRIGGER,CREATE ROUTINE,CREATE TEMPORARY TABLES,CREATE VIEW,ALTER ROUTINE,REFERENCES,EVENT,SHOW VIEW,EXECUTE,ALTER,DROP,CREATE,INDEX,SELECT,INSERT,UPDATE,DELETE'
    state: present

- name: "Setup cron job for SuiteCRM Schedulers"
  cron:
    user: www-data
    name: "SuiteCRM Schedulers"
    minute: "*"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    job: "php -f /var/www/html/cron.php > /dev/null 2>&1"








